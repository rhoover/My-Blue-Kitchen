(()=>{"use strict";let wakeButton=document.querySelector(".wake-screen-button"),wakeButtonText=document.querySelector(".wake-screen-button-text"),isSupported=!1;const changeUI=(status="acquired")=>{const acquired="acquired"===status;wakeButton.dataset.status=acquired?"on":"off",wakeButtonText.textContent=""+(acquired?"Screen Is Awake!":"Keep Screen Awake")};if(isSupported=!0,wakeButton.classList.add("wake-screen-button-active"),isSupported){let wakeLock=null;const requestWakeLock=async()=>{try{wakeLock=await navigator.wakeLock.request("screen"),changeUI(),wakeLock.onrelease=function(ev){console.log(ev)},wakeLock.addEventListener("release",(()=>{changeUI("released")}))}catch(err){wakeButton.dataset.status="off",wakeButton.textContent="Turn Wake Lock ON",statusElem.textContent=`${err.name}, ${err.message}`}};wakeButton.addEventListener("click",(()=>{"off"===wakeButton.dataset.status?requestWakeLock():wakeLock.release().then((()=>{wakeLock=null}))}))}})();